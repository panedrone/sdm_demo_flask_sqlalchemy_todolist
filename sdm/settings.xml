<?xml version="1.0" encoding="UTF-8"?>
<settings xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:noNamespaceSchemaLocation="settings.xsd">

    <!-- target: base folder of generated files (relative to the project root); -->
    <!-- sql: base folder of SQL files (relative to the project root); -->

    <folders target="dal" sql="sdm/sql"/>

    <!-- scope: (only Java and PHP) package name of DTO classes for Java or 
    namespace name of DTO classes for PHP; -->
    <!-- inheritance: (only Java) fully-qualified name of base class; example 
    for GWT: 1) inheritance="implements com.google.gwt.user.client.rpc.IsSerializable" 
    2) target class: public class Word implements com.google.gwt.user.client.rpc.IsSerializable... -->
    <!-- field-names-mode: (only Java) 0 - as column names; 1 - lowerCamelCase; 
    2 - lower_case; -->

    <dto scope="" inheritance="" field-names-mode="0" single-file="" macro=""/>

    <!-- scope: (only Java and PHP) package name of DAO classes for Java or 
    namespace name of DAO classes for PHP; -->

    <dao scope="" macro=""/>

    <!-- path: location of external VM file (relative to the project root); -->

    <external-vm-file path=""/>

    <ide event-log="true"/>

    <!-- class-prefix: prefix of generated C++ classes -->

    <cpp class-prefix=""/>

    <!-- jar: location of JDBC driver JAR file (relative to the project root); -->
    <!-- class: JDBC driver class name; -->
    <!-- url: JDBC connection URL (use $PROJECT_DIR$ or ${project_loc} if you need to specify project path); -->
    <!-- user: user name; -->
    <!-- pwd: password; -->

    <jdbc jar="sdm/sqlite-jdbc-3.36.0.3.jar" class="org.sqlite.JDBC"
          url="jdbc:sqlite:$PROJECT_DIR$/todolist.sqlite" user="" pwd=""/>

    <type-map default="">

        <!-- ***** sqlalchemy (sa) ****************** -->

        <!-- https://github.com/panedrone/sqldalmaker/blob/master/src/resources/data_store_sqlalchemy.py-->

        <!-- all numerics for oracle_cx -->

        <!--        <type detected="sa-java.math.BigDecimal" target="${sa-type}|0:NUMBER"/>-->

        <!-- numerics for others -->

        <type detected="sa-java.lang.Short" target="${sa-type}|0:SmallInteger"/>
        <type detected="sa-java.lang.Integer" target="${sa-type}|0:Integer"/>
        <type detected="sa-java.lang.Long" target="${sa-type}|0:BigInteger"/>

        <type detected="sa-java.lang.Float" target="${sa-type}|0:Float"/>
        <type detected="sa-java.lang.Double" target="${sa-type}|0:Float"/>
        <type detected="sa-java.math.BigDecimal" target="${sa-type}|0:Float"/>

        <type detected="sa-java.util.Date" target="${sa-type}|0:DateTime"/>
        <type detected="sa-java.lang.String" target="${sa-type}|0:String"/>
        <type detected="sa-java.lang.Boolean" target="${sa-type}|0:Boolean"/>
        <type detected="sa-byte[]" target="${sa-type}|0:LargeBinary"/>

        <type detected="sa-java.lang.Object" target="${sa-type-unknown}"/>

        <!-- ***** django (dj) ****************** -->

        <type detected="dj-java.lang.Short" target="${dj-type}|0:IntegerField"/>
        <type detected="dj-java.lang.Integer" target="${dj-type}|0:IntegerField"/>
        <type detected="dj-java.lang.Long" target="${dj-type}|0:BigIntegerField"/>

        <type detected="dj-java.lang.Float" target="${dj-type}|0:FloatField"/>
        <type detected="dj-java.lang.Double" target="${dj-type}|0:FloatField"/>
        <type detected="dj-java.math.BigDecimal" target="${dj-type}|0:DecimalField"/>

        <type detected="dj-java.util.Date" target="${dj-type}|0:DateTimeField"/>
        <type detected="dj-java.lang.String" target="${dj-type}|0:CharField"/>
        <type detected="dj-java.lang.Boolean" target="${dj-type}|0:BooleanField"/>
        <type detected="dj-byte[]" target="${dj-type}|0:BinaryField"/>

        <type detected="dj-java.lang.Object" target="${dj-type}|0:CharField"/>

        <type detected="dj-int" target="${dj-type}|0:IntegerField"/>
        <type detected="dj-long" target="${dj-type}|0:BigIntegerField"/>

        <type detected="dj-float" target="${dj-type}|0:FloatField"/>

        <type detected="dj-date" target="${dj-type}|0:DateTimeField"/>
        <type detected="dj-str" target="${dj-type}|0:CharField"/>
        <type detected="dj-bool" target="${dj-type}|0:BooleanField"/>
        <!--        <type detected="dj-byte[]" target="${dj-type}|0:BinaryField"/> -->

        <type detected="dj-object" target="${dj-type}|0:CharField"/>

        <!-- ****** raw SQL ************************ -->

        <type detected="java.lang.Short" target="int"/>
        <type detected="java.lang.Integer" target="int"/>
        <type detected="java.lang.Long" target="long"/>

        <type detected="java.lang.Double" target="float"/>
        <type detected="java.lang.Float" target="float"/>
        <type detected="java.math.BigDecimal" target="float"/>

        <type detected="java.util.Date" target="str"/>
        <type detected="java.lang.String" target="str"/>
        <type detected="java.lang.Boolean" target="bool"/>
        <type detected="byte[]" target="bytes"/>

        <type detected="java.lang.Object" target="object"/>

    </type-map>

    <macros>

        <!-- =built-in= is a key-word -->

        <macro name="${column}" value="=built-in="/>
        <macro name="${lower_snake_case(column)}" value="=built-in="/>
        <macro name="${camelCase(column)}" value="=built-in="/>
        <macro name="${TitleCase(column)}" value="=built-in="/>
        <macro name="${kebab-case(column)}" value="=built-in="/>

        <!-- go json tags: -->

        <macro name="${col}" value="${lower_snake_case(column)}"/>

        <macro name="${json}" value=" `json:&quot;${col}${0}&quot;`"/>

        <!-- sqlalchemy Column: -->

        <macro name="${sa-type-unknown}" value="${sa-column-base}|type:"/>
        <macro name="${sa-type}" value="${sa-column-base}|type:, ${0}"/>

        <!-- djando field: -->

        <macro name="${dj-type}" value="${dj-field}"/>

        <!-- In VM-based macros dedicated to render the fields/columns,
             "$fi" is a predefined variable of class FieldInfo:

                class FieldInfo:
                    String getName()
                    String getType()
                    String getColumnName()
                    boolean isAI()
                    boolean isPK()
                    String getFK()
                    boolean isNullable()
                    boolean isIndexed()
                    boolean isUnique()
                    String getComment()
                    String getterMethod()
                    String setterMethod()
                        -->

        <macro name="${sa-column-base}">
            <vm>
                <![CDATA[= Column('${column}'${type}#if($fi.FK), ForeignKey('$fi.FK')#end
#if($fi.PK), primary_key=True#end
#if($fi.AI), autoincrement=True#end
#if(!$fi.PK)
#if($fi.Indexed), index=True#end
#if($fi.Unique), unique=True#end
#if($fi.Nullable), nullable=True#end
#end)${comment}]]>
            </vm>
        </macro>

        <macro name="${dj-field}">
            <vm>
                <![CDATA[
= models.#if($fi.isAI())AutoField#else${0}#end(db_column='$fi.getColumnName()'#if($fi.isPK()), primary_key=True#else
#if($fi.isIndexed()), db_index=True#end
#if($fi.isUnique()), unique=True#end
#if($fi.isNullable()), blank=True, null=True#end
#end${1})${comment}]]>
            </vm>
        </macro>

        <macro name="${sa-column-base2}">
            <vm-xml>
                <print var="= Column('${column}'${type}"/>
                <if var="$fi.getFK()">
                    <print var=", ForeignKey('$fi.getFK()')"/>
                </if>
                <if var="$fi.isPK()">
                    <print var=", primary_key=True"/>
                </if>
                <if var="$fi.isAI()">
                    <print var=", autoincrement=True"/>
                </if>
                <if var="!$fi.isPK()">
                    <if var="$fi.isIndexed()">
                        <print var=", index=True"/>
                    </if>
                    <if var="$fi.isUnique()">
                        <print var=", unique=True"/>
                    </if>
                    <if var="$fi.isNullable()">
                        <print var=", nullable=True"/>
                    </if>
                </if>
                <print var=")${comment}"/>
            </vm-xml>
        </macro>

        <macro name="${dj-field2}">
            <vm-xml>
                <print var="= models."/>
                <if var="$fi.isAI()">
                    <print var="AutoField"/>
                    <else>
                        <print var="${0}"/>
                    </else>
                </if>
                <print var="(db_column='$fi.getColumnName()'"/>
                <if var="$fi.isPK()">
                    <print var=", primary_key=True"/>
                </if>
                <if var="!$fi.isPK()">
                    <if var="$fi.isIndexed()">
                        <print var=", db_index=True"/>
                    </if>
                    <if var="$fi.isUnique()">
                        <print var=", unique=True"/>
                    </if>
                    <if var="$fi.isNullable()">
                        <print var=", blank=True, null=True"/>
                    </if>
                </if>
                <print var="${1})${comment}"/>
            </vm-xml>
        </macro>

    </macros>

</settings>